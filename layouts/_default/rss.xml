{{- $pctx := . -}}
{{- if (and (in .CurrentSection "revision-history") (in .File.Path "revision-history/_")) -}}
{{- $pctx = .Site -}}
{{- end -}}
{{- $mergedPages := slice -}}
{{/* Get entries from the main folder when in context of a sub-section */}}
{{- if (eq $pctx .) -}}
{{- $generalPage := .Site.GetPage "revision-history" -}}
{{- $generalPages := $generalPage.RegularPages -}}
{{- range $generalPages -}}
{{- $mergedPages = $mergedPages | append (dict "path" . "pubDate" .Params.publishdate) -}}
{{- end -}}
{{- end -}}
{{- $pages := slice -}}
{{- $pages = $pctx.RegularPages -}}
{{/* Get all sections from revision-history */}}
{{- range $pages -}}
{{- if (in .CurrentSection "revision-history") -}}
{{- $mergedPages = $mergedPages | append (dict "path" . "pubDate" .Params.publishdate) -}}
{{- end -}}
{{- end -}}
{{/* Make a new array and rearrange the data based on publish date */}}
{{- $rearrangedPages := slice -}}
{{- range sort $mergedPages "pubDate" "desc" -}}
{{- $rearrangedPages = $rearrangedPages | append .path -}}
{{- end -}}
{{/* Set $pages to the rearranged structure */}}
{{- $pages = $rearrangedPages -}}
{{- $latestPage := $pages | first 1 -}}
{{- range $latestPage -}}
{{- $latestPage = . }}
{{- end -}}
{{- $pLink := .Permalink -}}
{{- $pageTitle := .Title -}}
{{- if .Params.apiArea -}}
{{- $pageTitle = (printf "%s %s %s %s" $pageTitle " - " .Params.apiArea "APIs") -}}
{{- end -}}
{{- printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bring {{ $pageTitle }}</title>
    <link>{{ .Permalink }}</link>
    <description>{{ if ne .Title .Site.Title }}{{ with .Title }}{{.}} {{ end }}{{ end }}on {{ .Site.Title }}</description>
    <generator>Hugo -- gohugo.io</generator>
    {{- with .Site.LanguageCode -}}
      <language>{{.}}</language>
    {{- end -}}
    {{- with $latestPage -}}
      {{- if not $latestPage.PublishDate.IsZero -}}
        <pubDate>{{ .PublishDate.Format "Mon, 02 Jan 2006" | safeHTML }} 06:04:05 -0500</pubDate>
        <lastBuildDate>{{ .PublishDate.Format "Mon, 02 Jan 2006" | safeHTML }} 06:04:05 -0500</lastBuildDate>
      {{- end -}}
    {{- end -}}
    {{- with .Site.Author.email -}}
      <managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</managingEditor>
    {{- end -}}
    {{- with .Site.Copyright -}}
      <copyright>{{.}}</copyright>
    {{- end -}}
    {{- with .OutputFormats.Get "RSS" -}}
      {{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
    {{- end -}}
    {{- range $pages -}}
      <item>
        <title>{{ .Title }}</title>
        <link>{{ $pLink }}</link>
        <pubDate>{{ .PublishDate.Format "Mon, 02 Jan 2006" | safeHTML }} 06:04:05 +0100</pubDate>
        {{- with .Site.Author.email -}}<author>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</author>{{- end -}}
        {{- $dateTitle := print (.PublishDate.Format "2006-01-02" | safeHTML) "-" .Title -}}
        {{- $guid := anchorize $dateTitle -}}
        <guid isPermaLink="false">{{ $guid }}</guid>
        <description>{{ .Content | html }}</description>
      </item>
    {{- end -}}
  </channel>
</rss>
