#%RAML 0.8
---
title: Booking API
baseUri: https://api.bring.com/booking/api

documentation:
- title: Introduction
  content: |
      The Bring Booking API is a logged-in service that lets Mybring users (customers of Mybring) programatically create a booking by invoking a Web Service over SOAP or by posting XML/JSON over HTTP. The API uses the same backend as [Mybring Booking](https://www.mybring.com/booking/) and the same PDF labels.

      We support two types of integration with the Booking API. XML/JSON over HTTP and SOAP (over HTTP).

      Bring Booking uses Bring Fraktguide as the source for price and availability for the different products. We advise clients of the Booking API to use Fraktguiden for getting the list price and checking availability before sending a booking request. Note that invoice payment is the only available payment option for the Booking API. This means that the Mybring user ID used in the booking request must have access to the customer number specified as payer of the booking.

- title: Versioning strategy
  content: |
      Each request has a `schemaVersion` element indicating which release of the schema is being used in the request and expected schema format in the response. Important: All clients must accept new (unknown) elements in the response. E.g. unknown elements should be ignored. The client framework used by client must thus not crash when unknown elements are encountered. Note that this requirement excludes the (old, but still widely used) Apache Axis 1.x Web Service client framework.

- title: Authentication
  content: |
    The Booking API requires authentication for all its endpoints. See the [getting started guide on authentication](/api/#authentication) if you're not sure what this means.

    | Header | Example | Comment |
    |:-------|:--------|:--------|
    | `X-MyBring-API-Uid` | `john.doe@example.com` | Mybring login ID |
    | `X-MyBring-API-Key` | `1234abc-abcd-1234-5678-abcd1234abcd ` | Mybring login's API key |
    | `X-Bring-Client-URL` | `https://example.com/ ` | A URL that sort of identifies where you're using the APIs. | 

    Those headers must be set for all endpoints documented below.

/customers{mediaTypeExtension}:
  displayName: Customers endpoint
  description: |
      The customer numbers are prefixed with the specialist, followed by the number. For Courier and Bring Express-products, we use a UUID to identify users.

      The customer API will return for each specialist a list with the products that you can order through the booking API.

      You can also get the API customer numbers from [this page in Mybring](https://www.mybring.com/useradmin/account/apicustomernumber).

      | Specialist | Example products | Example customer number |
      |:-----------|:-----------------|:------------------------|
      | Bring Parcels, Norway | `BPAKKE_DOR-DOR`, `PA_DOREN`, `EKSPRESS09` | `PARCELS_NORWAY-10001123123` |
      | Bring Cargo, Norway | `CARGO_GROUPAGE` | `CARGO_NORWAY-10001123123` |
      | Bring Express, Norway | `COURIER_4H`, `QUICKPACK_SAMEDAY`, `QUICKPACK_DAY_CERTAIN` | `EXPRESS_NORWAY-2caedf20-27da-012f-3858-58b0357c4f66` |
      | Bring Express, Sweden | `COURIER_4H`, `QUICKPACK_SAMEDAY`, `QUICKPACK_DAY_CERTAIN` | `EXPRESS_SWEDEN-406077f0-27da-012f-3859-58b0357c4f66` |
      | Oil Express, Norway | `OIL_EXPRESS` | `SYSPED_NORWAY-12345` |

  uriParameters:
    mediaTypeExtension:
      enum: [ .json, .xml ]
      description: Use .json to specify application/json or .xml to specify application/xml
  get:
    description: List available customers and products
    responses:
      200:
        displayName: List of available customers and products
        body:
          application/json:
            example: !include examples/customers.json
          application/xml:
            example: !include examples/customers.xml

/booking:
  displayName: Booking endpoint (REST)
  description: |
      Book shipments, get labels.
  post:
    description: Make a booking (REST)
    headers:
      Content-Type:
        description: Specify request format (application/json, application/xml)
        required: true
        enum: [ application/json, application/xml ]
      Accept:
        description: Specify response format (application/json, application/xml)
        required: false
        default: same as Content-Type
        enum: [ application/json, application/xml ]
    body:
      application/json:
        example: !include examples/basicRequest.json
      application/xml:
        schema: !include schemas/booking-v1.xsd
        example: !include examples/basicRequest.xml
    responses:
      200:
        displayName: Successful booking
        description: On a successful request, the response gives information about the booking. Most importantly it contains a link to the label for the shipment.
        body:
          application/json:
            example: !include examples/successfulResponse.json
          application/xml:
            example: !include examples/successfulResponse.xml
      250:
        displayName: Recipient Notification
        description: The `recipientNotification` attribute/element must be set for all products that allow electronic notification, in order for the recipient to receive electronic notification. This element must contain the recipient's mobile phone number and/or e-mail address.
        body:
          application/json:
            example: !include examples/recipientNotificationRequest.json
          application/xml:
            example: !include examples/recipientNotificationRequest.xml
      251:
        displayName: Cash On Delivery
        description: |
          The `cashOnDelivery` element/attribute can be set for products that allow cash on delivery. This element must contain the account number, the amount, the currency code and a `kid`, which is a customer identification number.

          `Amount` field only accepts numeric values without comma in it and with two decimal places.
        body:
          application/json:
            example: !include examples/cashOnDelivery.json
          application/xml:
            example: !include examples/cashOnDelivery.xml
      252:
        displayName: QuickPack Envelope
        description: |
          The `quickPackEnvelope` element/attribute is of type boolean, and can be set for products that allow quickpack envelope shipment. We recommend using the weight and measurements shown in the example, for correct mapping.
        body:
          application/json:
            example: !include examples/quickPackEnvelope.json
          application/xml:
            example: !include examples/quickPackEnvelope.xml
      253:
        displayName: Delivery Option
        description: |

          #### Attempted delivery

          If a sender want their package delivered to the door, and it cannot be delivered (i.e. Business closed or recipient is not present), then you can now choose what will happen with your package.

          If this option is not set, then the default behaviour is `TWO_DELIVERIES_THEN_RETURN`.

          If you want Bring to try deliver only once and/or deliver package to nearest PiB, then you must tell us by setting this option. These options cost extra money but the customer/sender will only be charged if the event happen.

          Example:

          You send a package to a business with the `deliveryOption=TWO_DELIVERIES_THEN_PIB`.

          - If Bring manage to deliver the package to the recipient on first try, then no extra charges is made.
          - If first attempt to deliver fails, then Bring will do a second attempt. The customer/sender will be charged extra.
          - If the second attempt also fails, then the package will be delivered to nearest PiB. The customer/sender will be charged extra.

          Possible options:

          - Not set = `TWO_DELIVERIES_THEN_RETURN`
          - `ONE_DELIVERY_THEN_PIB`
          - `TWO_DELIVERIES_THEN_PIB`
          - `TWO_DELIVERIES_THEN_RETURN`
        body:
          application/json:
            example: !include examples/deliveryOption.json
          application/xml:
            example: !include examples/deliveryOption.xml
      254:
        displayName: Flex Delivery
        description: |
          The `flexDelivery` element/attribute can be set for products that allow flex delivery. This element must contain an instruction message for the driver.
        body:
          application/json:
            example: !include examples/flexDelivery.json
          application/xml:
            example: !include examples/flexDelivery.xml
      255:
        displayName: Select Pickup Point in Norway
        description: |
          You can specify pickup point Id in request for `SERVICEPAKKE` and `CARRYON_HOMESHOPPING_BULKSPLIT` products for delivery of parcels within Norway and to Norway from other countries. Use [Pickup Point API](/api/pickup-point/) to get list of nearest pickup points.

          The parcel will be delivered to the pickup point specified in the request with SMS/Email notification. Pickup point delivery requires that the *recipient has email and/or phone number set*, so that he can receive notification when the package arrives at the pickup point.

          Pickup point id and country code has to be specified under `pickupPoint` within `parties` as shown below.
        body:
          application/json:
            example: !include examples/selectPickupPoint_NO.json
          application/xml:
            example: !include examples/selectPickupPoint_NO.xml
      256:
        displayName: Select Pickup Point in Sweden
        description: |
          You can specify pickup point Id in request for `CARRYON_HOMESHOPPING_BULKSPLIT` products for delivery of parcels within Sweden and to Sweden from other countries except Norway. Use [Pickup Point API](/api/pickup-point/) to get list of nearest pickup points.
          
          The parcel will be delivered to the pickup point specified in the request with SMS/Email notification. Pickup point delivery requires that the *recipient has email and/or phone number set*, so that he can receive notification when the package arrives at the pickup point.
          
          Pickup point id and country code has to be specified under `pickupPoint` in `parties` as shown below.
        body:
          application/json:
            example: !include examples/selectPickupPoint_SE.json
          application/xml:
            example: !include examples/selectPickupPoint_SE.xml
      257:
        displayName: Select Pickup Point in Denmark
        description: |
          The products `CARRYON_HOMESHOPPING` and `CARRYON_HOMESHOPPING_BULKSPLIT` support the `deliveryOption=PICKUP_POINT` for shipments within Denmark and to Denmark, respectively. The parcel will be delivered to the pickup point closest to the recipient address and the recipient will receive a notification when the parcel arrives. If you do not specify a delivery option for these products in Denmark, the package will be delivered to the door.
          
          You can also specify a pickup point id to get the package delivered at a specific pickup point. Use [Pickup Point API](/api/pickup-point/) to get list of nearest pickup points. Pickup point id and country code has to be specified under `pickupPoint` within `parties` as shown below.
          
          `pickupPoint` is optional but both `id` and `countryCode` inside it are mandatory. This element has precedence over `deliveryOption=PICKUP_POINT` i.e. if this element is present then pickup point specified in it will be selected irrespective of value set in `deliveryOption`.
          
          Pickup point delivery requires that the *recipient has email and/or phone number set*, so that he can receive notification when the package arrives at the pickup point.
        body:
          application/json:
            example: !include examples/selectPickupPoint_DK.json
          application/xml:
            example: !include examples/selectPickupPoint_DK.xml
      258:
        displayName: Select Pickup Point in Finland
        description: |
          You can specify pickup point Id in request for `CARRYON_HOMESHOPPING_BULKSPLIT` products for delivery of parcels to Finland from other countries except Norway. Use [Pickup Point API](/api/pickup-point/) to get list of nearest pickup points.
          
          The parcel will be delivered to the pickup point specified in the request with SMS/Email notification. Pickup point delivery requires that the *recipient has email and/or phone number set*, so that he can receive notification when the package arrives at the pickup point.
          
          Pickup point id and country code has to be specified under `pickupPoint` within `parties` as shown below.
        body:
          application/json:
            example: !include examples/selectPickupPoint_FI.json
          application/xml:
            example: !include examples/selectPickupPoint_FI.xml
      259:
        displayName: Express
        description: |
          ### Express service for Oil Express
          
          You can use Express service if you want to send your goods urgently (this service is *applicable only for Oil Express* product). In case of express delivery, goods are picked up as soon as possible and delivered to its destination.
          
          For using Express service send `true` value in `express` as shown in below example.
        body:
          application/json:
            example: !include examples/express.json
          application/xml:
            example: !include examples/express.xml
    


/ws:
  displayName: Booking endpoint (SOAP)
  description: Make a booking, get a label
  post:
    description: Make a booking (SOAP)
    body: 
      application/soap+xml:
        schema: schemas/booking-v1.xsd
        example: !include examples/soap_response_booking.xml
    responses:
      200:
        displayName: Successful booking
        body:
          application/soap+xml:
            example: !include examples/soap_response_booking.xml



