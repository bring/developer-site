#%RAML 1.0
---
title: Reports API
baseUri: https://www.mybring.com/reports/api
types:
  DashboardData:
    type: object
    properties:
      kolliNumber:
        type: string
        required: true
        description: Represents a package number
      shipmentNumber:
        type: string
        required: true
        description: Represents a shipment number
      recipientName:
        type: string
        required: true
        description: Represents a recipient name
      lastStatus:
        type: string
        required: true
        description: Represents the lastStatus
      lastEvent:
        type: string
        required: false
        description: Represents the lastEvent
      senderReference:
        type: string
        required: false
        description: Represents the senderReference
      recipientMobileNumber:
        type: string
        required: false
        description: Represents the recipient Mobile Number
      productCode:
        type: string
        required: false
        description: Represents the productCode
      productName:
        type: string
        required: true
        description: Represents the productName
      countryCode:
        type: string
        required: true
        enum: [ "DK", "FI","NO", "SE"]
        description: Represents the country code
      shipmentGroupType:
        type: string
        required: true
        enum: [ "REMAINING_FOR_DELIVERY", "LOADED_TO_CAR", "ATTEMPTED_DELIVERY", "AT_PICKUP_POINT", "SUCCESSFULLY_DELIVERED"]
        description: Represents the shipmentGroup by status

/generate{mediaTypeExtension}:
  displayName: List available customers
  description: |
    List available customers for the provided API credentials.
  uriParameters:
    mediaTypeExtension:
      enum: [ .json, .xml ]
      description: Use .json to specify application/json or .xml to specify application/xml
  get:
    description: List available customers
    headers:
      Accept-Language:
        description: A comma-separated list of language codes, `no` for Norwegian, `en` for English, etc.
        type: string
        required: false
    responses:
      200:
        displayName: Successful response
        body:
          application/json:
            examples:
              successful:
                displayName: Successful
                description: The example below shows list of available customers
                value: !include examples/list_customers.json
          application/xml:
            examples:
              successful:
                displayName: Successful
                description: The example below shows list of available customers
                value: !include examples/list_customers.xml



/generate/{customerId}{mediaTypeExtension}:
  displayName: List available reports for a customer
  description: |
    Each customer has a set of reports available. This endpoint lists all available reports for a given customer.
  uriParameters:
    customerId:
      description: A customer ID from the 'list of available customers' call.
      type: string
      required: true
    mediaTypeExtension:
      enum: [ .json, .xml ]
      description: Use .json to specify application/json or .xml to specify application/xml
  get:
    description: List available reports for a customer
    headers:
      Accept-Language:
        description: A comma-separated list of language codes, `no` for Norwegian, `en` for English, etc.
        type: string
        required: false
    responses:
      200:
        displayName: Successful response
        body:
          application/json:
            examples:
              successful:
                displayName: Successful
                description: The example below shows list of available reports
                value: !include examples/list_reports.json
          application/xml:
            examples:
              successful:
                displayName: Successful
                description: The example below shows list of available reports
                value: !include examples/list_reports.xml

/generate/{customerId}/{reportTypeId}{mediaTypeExtension}:
  displayName: Generate a report
  description: |
    To generate a report do a GET to the supplied URL, and include the parameters described in the previous response. You need not invoke the two first steps for every report generation if customer id and report type are known.

    This is asynchronous request. So the GET-call will return 202, telling the caller the that the request for a report is put on the queue. The URL to query to get the status for the request if provided as an HTTP header and also in the response.

    The example below shows how to generate a PARCELS-DELIVERED report for PARCELS_NORWAY-00012341234 in the period 01.07.2014 to 01.08.2014.
  uriParameters:
    customerId:
      description: A customer ID from the 'list of available customers' call.
      type: string
      required: true
    reportTypeId:
      description: A report type ID from the 'list of available reports' call.
      type: string
      required: true
    mediaTypeExtension:
      enum: [ .json, .xml ]
      description: Use .json to specify application/json or .xml to specify application/xml
  get:
    description: Generate a report
    queryParameters:
      parameterName:
        description: The different report types have different params. The params are documented in the list of available reports, for example `fromDate` and `toDate`.
        type: string
        required: true
    headers:
      Accept-Language:
        description: A comma-separated list of language codes, `no` for Norwegian, `en` for English, etc.
        type: string
        required: false
    responses:
      202:
        displayName: Successful response
        headers:
          Location:
            description: URL to get status of the generated report
            required: true
            type: string
            example: https://www.mybring.com/reports/api/report/db285042-6e8d-4563-94ca-eb1100706a73/status/
        body:
          application/json:
            examples:
              successful:
                displayName: Successful
                description: The example below shows successful reports generation response with URL
                value: !include examples/generate_report.json
          application/xml:
            examples:
              successful:
                displayName: Successful
                description: The example below shows successful reports generation response with URL
                value: !include examples/generate_report.xml

/report/{reportId}/status{mediaTypeExtension}:
  displayName: Check the status of a report
  description: |
    Since the generation of reports may take several minutes, we supply a status address to check the status of the report generation. The status page will display `NOT_DONE`, until the report is ready to be downloaded. When the report is ready, URLs to download the report will be in the response
  uriParameters:
    reportId:
      description: A report ID from a 'generate a report' call.
      type: string
      required: true
    mediaTypeExtension:
      enum: [ .json, .xml ]
      description: Use .json to specify application/json or .xml to specify application/xml
  get:
    description: Check the status of a report
    headers:
      Accept-Language:
        description: A comma-separated list of language codes, `no` for Norwegian, `en` for English, etc.
        type: string
        required: false
    responses:
      200:
        displayName: Report status
        description: Examples show different statuses.
        body:
          application/json:
            examples:
              successful:
                displayName: Report status done
                description: The example below shows reports status done
                value: !include examples/status_done.json
              successful_notDone:
                displayName: Report status not done
                description: The example below shows reports generated status
                value: !include examples/status_not_done.json
              successful_failed:
                displayName: Report status failed
                description: The example below shows reports generation failed status
                value: !include examples/status_failed.json
          application/xml:
            examples:
              successful:
                displayName: Report status done
                description: The example below shows reports status not done
                value: !include examples/status_done.xml
              successful_notDone:
                displayName: Report status not done
                description: The example below shows reports generated status
                value: !include examples/status_not_done.xml
              successful_failed:
                displayName: Report status failed
                description: The example below shows reports generation failed status
                value: !include examples/status_failed.xml

/report/{reportId}{mediaTypeExtension}:
  displayName: Get report
  description: |
    Returns the generated report.
  uriParameters:
    reportId:
      description: A report ID from a 'generate a report' call.
      type: string
      required: true
    mediaTypeExtension:
      enum: [ .xlsx, .xml ]
      description: Use .xlsx to get Excel file or .xml to get XML file.
  get:
    description: Get report
    queryParameters:
      compress:
        description: Get the XML report as a compressed ZIP archive.
        type: boolean
        required: false
    headers:
      Accept-Language:
        description: A comma-separated list of language codes, `no` for Norwegian, `en` for English, etc.
        type: string
        required: false
    responses:
      200:
        displayName: Report
        description: |
          Examples show the MetaData included in successful(200) response for specified invoice report vs other reports.
        body:
          application/xml:
            examples:
              successful_invoice:
                displayName: Successful with invoice details
                description: The example below shows empty report with invoice details under metadata section of Report response
                value: !include examples/empty_invoice_report.xml
              successful:
                displayName: Successful
                description: The example below shows empty report without invoice details
                value: !include examples/empty_report.xml

/invoices/{customerOrGroupId}{mediaTypeExtension}:
  displayName: List invoice numbers
  description: |
    ** DEPRECATED FOR REMOVAL 1. SEPTEMBER 2023 **
    This endpoint will be removed in a future version of the API.
    Use the Invoice API instead:
    [Invoice API / List of all Invoices](/api/invoice/#list-of-all-invoices)
    Gets the list of invoice numbers for a customer id or a customer group. By default it shows last 65 days of invoices, with the possibility to access 365 days data by providing from date and to date.
    This endpoint support Main Customer Number only.
  uriParameters:
    customerOrGroupId:
      description: Id for customer or customer group. Customer group id should have the prefix `GROUP_`.
      type: string
      required: true
    mediaTypeExtension:
      enum: [ .json, .xml ]
      description: Use .json to specify application/json or .xml to specify application/xml
  get:
    description: List invoice numbers
    headers:
      Accept-Language:
        description: A comma-separated list of language codes, `no` for Norwegian, `en` for English, etc.
        type: string
        required: false
    queryParameters:
            fromDate:
              description: Start date for fetching invoices in format dd.mm.yyyy.
              required: false
              example: 01.01.2019
            toDate:
              description: End date for fetching invoices in format dd.mm.yyyy.
              type: string
              required: false
              example: 30.06.2019
    responses:
      200:
        displayName: Successful response
        description:
        body:
          application/json:
            examples:
              successful:
                displayName: Successful
                description: The example below shows an list of invoices
                value: !include examples/list_invoices.json
          application/xml:
            examples:
              successful:
                displayName: Successful
                description: The example below shows an list of invoices
                value: !include examples/list_invoices.xml
