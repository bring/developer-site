#%RAML 1.0
---
title: Booking API
baseUri: https://api.bring.com/booking/api

/customers:
  displayName: List customer numbers
  description: |
      The customer numbers are prefixed with the specialist, followed by the number. For Courier and Bring Express-services, we use a UUID to identify users.

      The customer API will return for each specialist a list with the services that you can order through the booking API.

      | Specialist | Example services | Example customer number |
      |:-----------|:-----------------|:------------------------|
      | Bring Parcels, Norway | `BPAKKE_DOR-DOR`, `PA_DOREN`, `EKSPRESS09`, `3584` | `PARCELS_NORWAY-10001123123` |
      | Bring Cargo, Norway | `CARGO_GROUPAGE` | `CARGO-329511` |
      | Bring Cargo, International | `CARGO_INTERNATIONAL` | `CARGO-803739` |
      | Bring Express, Norway | `COURIER_4H`, `EXPRESS_NORDIC_SAME_DAY`, `EXPRESS_INTERNATIONAL` | `EXPRESS_NORWAY-2caedf20-27da-012f-3858-58b0357c4f66` |
      | Bring Express, Sweden | `COURIER_4H`, `EXPRESS_NORDIC_SAME_DAY`, `EXPRESS_INTERNATIONAL` | `EXPRESS_SWEDEN-406077f0-27da-012f-3859-58b0357c4f66` |
      | Oil Express, Norway | `OIL_EXPRESS` | `SYSPED_NORWAY-12345` |

      [List of services for each customer type](/api/services/#booking)

  get:
    description: List customer numbers and services
    headers:
      Accept: application/json or application/xml
    responses:
      200:
        displayName: List of available customers and services
        body:
          application/json:
            examples:
              customers:
                displayName: List customer numbers
                value: !include examples/customers.json
          application/xml:
            examples:
              customers:
                displayName: List customer numbers
                value: !include examples/customers.xml

/booking:
  displayName: Book shipments
  description: |
      This is the endpoint where you can book a shipment and get a printable label in return.

      ### Value added services

      The following services have available value added services:

      | Services | Value added services |
      |:--------|:--------------------|
      | SERVICEPAKKE | POSTOPPKRAV, EVARSLING |
      | BPAKKE_DOR-DOR | EVARSLING, SIMPLE_DELIVERY, deliveryOption |
      | PA_DOREN | EVARSLING, SIMPLE_DELIVERY, deliveryOption |
      | EKSPRESS09 | EVARSLING, LORDAGSUTKJORING |
      | 3570 | 1081 |
      | 3584 | 1081 |

      See the "More examples" section below to see examples on how to use value added services.

      You have to send a list of additionalService tags under the additionalServices tag, where the id element identify the additional service to request.

      #### XML

      ```xml
      <additionalServices>
        <additionalService>
          <id>EVARSLING</id>
          <email>sender@sender.com</email>
          <mobile>12345</mobile>
        </additionalService>
        <additionalService>
          <id>DANGEROUS_GOODS</id>
          <mobile>777777</mobile>
          <unNumber>ABC</unNumber>
        </additionalService>
      </additionalServices>
      ```

      #### JSON

      ```json
      "additionalServices": [
        {
          "id": "DANGEROUS_GOODS",
          "unNumber": "ABC"
        },
        {
          "id": "EVARSLING",
          "email": "recipient@recipient.com",
          "mobile": "97777777"
        }
      ]
      ```

      ### Error handling

      If an error occurs, the following will be provided:

      - `uniqueId`: A unique log ID (UUID) that can be used as a reference for the error
      - `code`: An error code describing the error
      - `message`: Internationalized messages (with `<message lang="xx">` elements). First version will be with `lang="en"` (English) only. </message>

      See the [error codes](#error-codes) below to get an overview of error codes and what they mean.

      ### Testing

      This service will send actual production orders unless it is set to testing mode.

      To use the test mode, you need to set the `testIndicator` flag to `true` on the root node.

      **Note that this test mode exists only for development purposes, not production use. It is rate limited, and may therefore affect your performance if used in production.**

      Note that the examples below use `testIndicator=true`, so remove this when implementing the Booking API in your production system.

      ### Measurements

      For cargo services(5100, 5300, CARGO, 9100), Weight is mandatory and one of the Volume / Load Meter / Dimensions / Number of Pallets is mandatory.

      For home delivery services (DOUBLE_INDOOR, CURBSIDE, DOUBLE_INDOOR_EVENING, CURBSIDE_EVENING), Weight is mandatory and one of Volume / Dimensions are mandatory.
  post:
    description: Make a booking
    headers:
      Content-Type:
        description: Specify request format (application/json, application/xml)
        required: true
        enum: [ application/json, application/xml ]
      Accept:
        description: Specify response format (application/json, application/xml)
        required: false
        default: same as Content-Type
        enum: [ application/json, application/xml ]
    queryParameters:
        testIndicator:
            description:  It is true for test orders.
            type: boolean
            example: false
            required: true
        schemaVersion:
            description: Currently, it is 1
            type: integer
            example: 1
            required: true
        shippingDateTime:
            description: The date and time when an order is ready to be transported. The label generated against a booking will be valid for 52 weeks when Bring receives the request for an order.
            type: dateTime
            example: 2016-07-26T06:24:09 or 1469494449000 (milliseconds since 01.01.1970, for json req)
            required: true
        customerSpecifiedDeliveryDateTime:
            description: The date and time selected for preferred delivery by the customer. Note that for some services, the time part of this field will be ignored. This field is applicable for 'PA_DOREN', '5600', and 'OIL_EXPRESS'. For 'PA_DOREN' and '5600' the date cannot cannot be set to more than current date + 10 days.
            type: dateTime
            example: 2020-05-11T11:12:13 (yyyy-MM-ddThh:mm:ss)
            required: false
        customerNumber:
            description: Specify API customer number. This parameter can be maximum 35 character long.
            type: string
            example: PARCELS_NORWAY-*********
            required: true
        addressLine:
            description: Specify address. This parameter can be maximum 35 character long.
            type: string
            example: Testsvingen 12
            required: true
        addressLine2:
            description: Specify address line 2. This parameter can be 35 character long.
            type: string
        contact:
            description: Specify contact details - name, email and phoneNumber in the child tags.
            type: string
            example: check the example request to see how contact block is build
            required: false
        purchaseOrderNumber:
            type: string
            description: Specify when there is any purchase orders associated with the booking. This parameter can be maximum 35 character long.
        weightInKg:
            description: Specify weight in kilograms
            type: double
            example: 15.2
            required: true
        goodsDescription:
            description: This can be used in three different elements; `package`(optional), `packageGroup`(optional), and `ediCustomsDeclaration`(required). It describes what is inside the package. This parameter can be maximum 35 characters long.
            type: string
        heightInCm:
            description: Specify height in cm. Dimension is optional when volumeInDm3 is specified in the request for cargo.
            type: integer
            example: 100
            required: true
        widthInCm:
            description: Specify width in cm. Dimension is optional when volumeInDm3 is specified in the request for cargo.
            type: integer
            example: 100
            required: true
        lengthInCm:
             description: Specify length in cm. Dimension is optional when volumeInDm3 is specified in the request for cargo.
             type: integer
             example: 100
             required: true
        numberOfItems:
             description: Specify number of items within a package
             type: integer
             example: 5
             required: true
        volumeInDm3:
             description: Specify volume in cubic decimeter. This is optional when dimension is specified in the request for cargo.
             type: decimal
             required: true
        numberOfPallets:
             description: Specify Number of pallets when request is for Cargo
             type: integer
             required: false
             example: 3
        loadMeters:
             description: Specify Load meters when request is for Cargo. Maximum value is 49.9
             type: double
             required: false
             example: "2.0"
        whoPaysInvoice:
             description: Specify which party will pay the invoice for the booking. This parameter can be maximum 35 character long.
             type: string
             enum: [sender, recipient, thirdParty]
        accountNumber:
             description: Specify account number for cash on delivery. This parameter can be maximum 35 character long.
             type: string
             example: "12345678903"
             required: true
        accountType:
             description: Specify account type. This parameter can be maximum 35 character long.
             type: string
             enum: [bankgiro,plusgiro]
        amount:
             description: Specify amount
             type: double
        currencyCode:
             description: Specify currency code
             type: string
             example: NOK
        correlationId:
             description: Specify something to correlate packages which belong to same order
             type: string
        containerId:
             description: Specify the container identification in which dangerous good is packed. This parameter can be maximum 35 character long.
             type: string
             example: 1236
        unNumber:
             description: Specify UN number of dangerous good. This parameter can be maximum 35 character long.
             type: string
             example: 1560
             required: true
        commodity:
             description: Specify name of the dangerous good. This parameter can be maximum 35 character long.
             type: string
             example: ARSENTRIKLORID
             required: true
        dangerClass:
             description: Specify the class of dangerous good. This parameter can be maximum 35 character long.
             type: string
             example: 1
             required: true
        postalCode:
             description: Specify the postal code. This parameter can be maximum 35 character long.
             type: string
             required: true
        city:
            description: Specify the city. This parameter can be maximum 35 character long.
            type : string
            required: true
        countryCode:
            description: Specify the country code. This parameter must be 2 characters long.
            type: string
            example: NO
            required: true
        reference:
            description: Specify shipper or consignee reference. This parameter can be maximum 35 character long.
            type: string
        additionalAddressInfo:
            description: Pickup instruction and delivery instruction for use on labels (and waybills) for the OIL_EXPRESS, CARGO (Norway and international), QUICKPACK, COURIER, SERVICEPAKKE services. This parameter can be maximum 35 character long.
            type: string
            required: false
        vatNumber:
            description: Specify organisation number. This parameter can be maximum 30 character long.
            type: string
        email:
            description: Specify e-mail address if you want booking confirmation e-mail to be sent. Can be applied to sender's e-mail (outgoing services) and sender's e-mail/recipient's e-mail (return services) . This parameter can be maximum 60 character long.
            type: string
            pattern: ^((\w*_)?(p|m|)\d*(\.\d|)|(\w*_)?(p|m)\d*(\.\d|)p)$
        phoneNumber:
            description: Specify phone number. `Note` Sender Phone number is a mandatory field for all outgoing services. Exceptions to this rule are 3584, 3570 and all the return services in mybring.
            type: string
        messageForRecipient:
            description: Specify message to recipient. This parameter can be maximum 35 character long.
            type: string
        quantity:
            description: The number of articles in an `ediCustomsDeclaration` line
            type: integer
            required: true
        customsArticleNumber:
            description: The customs article number in an `ediCustomsDeclaration` line
            type: string
            example: 33.05.1000
            required: false
        itemNetWeightInKg:
            description: The weight (in kg) of all the articles declared in an `ediCustomsDeclaration` line
            type: double
            required: true
        tarriffLineAmount:
            description: The value of all the articles declared in an `ediCustomsDeclaration` line
            type: double
            required: true
        currency:
            description: The currency code used in an `ediCustomsDeclaration` line. This parameter must be 3 characters long.
            type: string
            example: SEK
            required: true
        countryOfOrigin:
            description: The country code of origin of the articles in an `ediCustomsDeclaration` line. This parameter must be 2 characters long.
            type: string
            example: SE
            required: false
        natureOfTransaction:
            description: Specifies the purpose of transaction. This field is mandatory when sending customs information in the request.
            type: string
            enum: [SALE_OF_GOODS, RETURNED_GOODS, GIFT, COMMERCIAL_SAMPLE, DOCUMENTS, OTHER]
            required: true
        vatOnEcommerce:
            description: VAT On Ecommerce ID used for customs import to Norway. This field is mandatory when sending customs import information in the request. It must be 7 digits number.
            type: integer
            required: true
        iossNumber:
            description: Import One-Stop Shop (IOSS) number used for customs export from Norway to EU. This field is optional when customs export information in the request. It must be on the form `IMxxxxxxxxxx` (10 digits). Only valid when `natureOfTransaction` is of type `SALE_OF_GOODS`. Note that this field cannot be combined with a `reference` field on the sender party.
            type: string
            required: false
        nonStandardCourierProductCode:
            description: Specify the product code for customize courier services. This field is mandatory when request is for Non Standard Courier.
            type: string
            example: CDA
            required: false
        generateQrCodes:
            description: Specify whether QR codes is wanted in addition to the regular label for certain services. See the [qr-codes section](#qr-codes) for more on this.
            type: boolean
            required: false
        returnProduct:
            description: Specify the return service which should be used to generate a return shipment along with outgoing shipment. See the [return product section](#return-product) for more on this.
            type: boolean
            required: false

    body:
      application/json:
        examples:
          basicRequestNew:
            displayName: Make a booking 
            value: !include examples/basicRequestNew.json
      application/xml:
        examples:
          basicRequestNew:
            schema: !include schemas/booking-v1.xsd
            displayName: Make a booking 
            value: !include examples/basicRequestNew.xml
    responses:
      200:
        displayName: Successful booking
        description: On a successful request, the response gives information about the booking. Most importantly it contains a link to the label for the shipment.
        body:
          application/json:
            examples:
              success:
                displayName: Successful booking
                value: !include examples/successfulResponse.json
          application/xml:
            examples:
              success:
                displayName: Successful booking
                value: !include examples/successfulResponse.xml

      251:
        displayName: Recipient notification
        description: The `recipientNotification` attribute/element must be set for all services that allow electronic notification, in order for the recipient to receive electronic notification. This element must the recipient's mobile phone number and/or e-mail address.
        body:
          application/json:
            examples:
              recipientNotification:
                displayName: Recipient notification
                value: !include examples/recipientNotificationRequestNew.json
          application/xml:
            examples:
              recipientNotification:
                displayName: Recipient notification
                value: !include examples/recipientNotificationRequestNew.xml

      253:
        displayName: Cash On Delivery
        description: |
          The `cashOnDelivery` element/attribute can be set for services that allow cash on delivery. This element must contain the account number, the amount, the currency code and a `kid`, which is a customer identification number.

          `Amount` field only accepts numeric values without comma in it and with two decimal places.
        body:
          application/json:
            examples:
              cashOnDelivery:
                displayName: Cash On Delivery
                value: !include examples/cashOnDeliveryNew.json
          application/xml:
            examples:
              cashOnDelivery:
                displayName: Cash On Delivery
                value: !include examples/cashOnDeliveryNew.xml

      255:
        displayName: QuickPack Envelope
        description: |
          The `quickPackEnvelope` element/attribute is of type boolean, and can be set for services that allow quickpack envelope shipment. We recommend using the weight and measurements shown in the example, for correct mapping.
        body:
          application/json:
            examples:
              quickPackEnvelope:
                displayName: QuickPack Envelope
                value: !include examples/quickPackEnvelopeNew.json
          application/xml:
            examples:
              quickPackEnvelope:
                displayName: QuickPack Envelope
                value: !include examples/quickPackEnvelopeNew.xml

      262:
        displayName: Delivery Option
        description: |

          #### Attempted delivery

          If a sender want their package delivered to the door, and it cannot be delivered (i.e. Business closed or recipient is not present), then you can now choose what will happen with your package.

          If you want Bring to try deliver only once and/or deliver package to nearest PiB, then you must tell us by setting this option. These options cost extra money but the customer/sender will only be charged if the event happen.

          Example:

          You send a package to a business with the `deliveryOption=TWO_DELIVERIES_THEN_PIB`.

          - If Bring manage to deliver the package to the recipient on first try, then no extra charges is made.
          - If first attempt to deliver fails, then Bring will do a second attempt. The customer/sender will be charged extra.
          - If the second attempt also fails, then the package will be delivered to nearest PiB. The customer/sender will be charged extra.

          Possible options:

          - `ONE_DELIVERY_THEN_PIB`
          - `TWO_DELIVERIES_THEN_PIB`
          - `TWO_DELIVERIES_THEN_RETURN`
        body:
          application/json:
            examples:
              deliveryOption:
                displayName: Delivery Option
                value: !include examples/deliveryOption.json
          application/xml:
            examples:
              deliveryOption:
                displayName: Delivery Option
                value: !include examples/deliveryOption.xml

      264:
        displayName: Flex Delivery
        description: |
          The `flexDelivery` element/attribute can be set for services that allow flex delivery. This element must contain an instruction message for the driver.
        body:
          application/json:
            examples:
              flexDelivery:
                displayName: Flex Delivery
                value: !include examples/flexDelivery.json
          application/xml:
            examples:
              flexDelivery:
                displayName: Flex Delivery
                value: !include examples/flexDelivery.xml

      266:
        displayName: Select Pickup Point in Norway
        description: |
          You can specify pickup point Id in request for `SERVICEPAKKE` and `PICKUP_PARCEL_BULK` services for delivery of parcels within Norway and to Norway from other countries. Use [Pickup Point API](/api/pickup-point/) to get list of nearest pickup points.

          The parcel will be delivered to the pickup point specified in the request with SMS/Email notification. Pickup point delivery requires that the *recipient has email and/or phone number set*, so that he can receive notification when the package arrives at the pickup point.

          Pickup point id and country code has to be specified under `pickupPoint` within `parties` as shown below.
        body:
          application/json:
            examples:
              selectPickupPoint_NO:
                displayName: Select Pickup Point in Norway
                value: !include examples/selectPickupPoint_NO.json
          application/xml:
            examples:
              selectPickupPoint_NO:
                displayName: Select Pickup Point in Norway
                value: !include examples/selectPickupPoint_NO.xml
      268:
        displayName: Select Pickup Point in Sweden
        description: |
          You can specify pickup point Id in request for `PICKUP_PARCEL_BULK` services for delivery of parcels within Sweden and to Sweden from other countries. Use [Pickup Point API](/api/pickup-point/) to get list of nearest pickup points.

          The parcel will be delivered to the pickup point specified in the request with SMS/Email notification. Pickup point delivery requires that the *recipient has email and/or phone number set*, so that he can receive notification when the package arrives at the pickup point.

          Pickup point id and country code has to be specified under `pickupPoint` in `parties` as shown below.
        body:
          application/json:
            examples:
              selectPickupPoint_SE:
                displayName: Select Pickup Point in Sweden
                value: !include examples/selectPickupPoint_SE.json
          application/xml:
            examples:
              selectPickupPoint_SE:
                displayName: Select Pickup Point in Sweden
                value: !include examples/selectPickupPoint_SE.xml

      270:
        displayName: Select Pickup Point in Denmark
        description: |
          The services `PICKUP_PARCEL` and `PICKUP_PARCEL_BULK` support the `deliveryOption=PICKUP_POINT` for shipments within Denmark and to Denmark, respectively. The parcel will be delivered to the pickup point closest to the recipient address and the recipient will receive a notification when the parcel arrives. If you do not specify a delivery option for these services in Denmark, the package will be delivered to the door.

          You can also specify a pickup point id to get the package delivered at a specific pickup point. Use [Pickup Point API](/api/pickup-point/) to get list of nearest pickup points. Pickup point id and country code has to be specified under `pickupPoint` within `parties` as shown below.

          `pickupPoint` is optional but both `id` and `countryCode` inside it are mandatory. This element has precedence over `deliveryOption=PICKUP_POINT` i.e. if this element is present then pickup point specified in it will be selected irrespective of value set in `deliveryOption`.

          Pickup point delivery requires that the *recipient has email and/or phone number set*, so that he can receive notification when the package arrives at the pickup point.
        body:
          application/json:
            examples:
              selectPickupPoint_DK:
                displayName: Select Pickup Point in Denmark
                value: !include examples/selectPickupPoint_DK.json
          application/xml:
            examples:
              selectPickupPoint_DK:
                displayName: Select Pickup Point in Denmark
                value: !include examples/selectPickupPoint_DK.xml

      272:
        displayName: Select Pickup Point in Finland
        description: |
          You can specify pickup point Id in request for `PICKUP_PARCEL_BULK` services for delivery of parcels to Finland from other countries. Use [Pickup Point API](/api/pickup-point/) to get list of nearest pickup points.

          The parcel will be delivered to the pickup point specified in the request with SMS/Email notification. Pickup point delivery requires that the *recipient has email and/or phone number set*, so that he can receive notification when the package arrives at the pickup point.

          Pickup point id and country code has to be specified under `pickupPoint` within `parties` as shown below.
        body:
          application/json:
            examples:
              selectPickupPoint_FI:
                displayName: Select Pickup Point in Finland
                value: !include examples/selectPickupPoint_FI.json
          application/xml:
            examples:
              selectPickupPoint_FI:
                displayName: Select Pickup Point in Finland
                value: !include examples/selectPickupPoint_FI.xml

      274:
        displayName: Express service for Oil Express
        description: |
          You can use Express service if you want to send your goods urgently (this service is *applicable only for Oil Express* service). In case of express delivery, goods are picked up as soon as possible and delivered to its destination.

          For using Express service send `true` value in `express` as shown in below example.
        body:
          application/json:
            examples:
              express:
                displayName: Express service for Oil Express
                value: !include examples/express.json
          application/xml:
            examples:
              express:
                displayName: Express service for Oil Express
                value: !include examples/express.xml

      276:
        displayName: Delivery Indoors
        description: The `deliveryIndoors` element/attribute can be set for services that allow delivery indoors. This element must contain an instruction message for the driver.
        body:
          application/json:
            examples:
              deliveryIndoors:
                displayName: Delivery Indoors
                value: !include examples/deliveryIndoors.json
          application/xml:
            examples:
              deliveryIndoors:
                displayName: Delivery Indoors
                value: !include examples/deliveryIndoors.xml

      280:
        displayName: Cargo International - Incoterms
        description: The `incotermRule` element/attribute can be set for Cargo International service. This is a mandatory element while creating an order for Cargo International. API request will return error code i.e., `BOOK-INPUT-065` in case of no IncotermRule is provided in request. This element allows either of 13 values `DDP`, `DAP`, `FCA`, `FAS`, `FOB`, `CFR`, `CIF`, `CPT`, `CIP`, `DAT`, `DAF`, `DES` and `EXW`.
        body:
          application/json:
            examples:
              incotermRule:
                displayName: Cargo International - Incoterms
                value: !include examples/incotermRule.json
          application/xml:
            examples:
              incotermRule:
                displayName: Cargo International - Incoterms
                value: !include examples/incotermRule.xml

      282:
        displayName: Cargo International - Dangerous Goods
        description: The `dangerousGoods` attribute/element block should be there in request for Cargo International to create an order with dangerous goods.
        body:
          application/json:
            examples:
              bciDangerousGoods:
                displayName: Cargo International - Dangerous Goods
                value: !include examples/bciDangerousGoods.json
          application/xml:
            examples:
              bciDangerousGoods:
                displayName: Cargo International - Dangerous Goods
                value: !include examples/bciDangerousGoods.xml

      284:
        displayName: Cargo Norway - Dangerous Goods
        description: The `dangerousGoods` attribute/element block should be there in request for Cargo Norway to create an order with dangerous goods.
        body:
          application/json:
            examples:
              cargoDangerousGoods:
                displayName: Cargo Norway - Dangerous Goods
                value: !include examples/cargoDangerousGoods.json
          application/xml:
            examples:
              cargoDangerousGoods:
                displayName: Cargo Norway - Dangerous Goods
                value: !include examples/cargoDangerousGoods.xml

      286:
        displayName: Simple Delivery
        description: |
          The `simpleDelivery` element/attribute can be set for services that allow simple delivery.
        body:
          application/json:
            examples:
              simpleDelivery:
                displayName: Simple Delivery
                value: !include examples/simpleDelivery.json
          application/xml:
            examples:
              simpleDelivery:
                displayName: Simple Delivery
                value: !include examples/simpleDelivery.xml

      288:
        displayName: Cargo Norway - Number of Pallets & Load Meters
        description: The `numberOfPallets` element can be set for Number of pallets & `loadMeters` can be set for Load Metres
        body:
          application/json:
            examples:
              cargowithPallets:
                displayName: Cargo Norway - Number of Pallets & Load Meters
                value: !include examples/cargowithPallets.json
          application/xml:
            examples:
              cargowithPallets:
                displayName: Cargo Norway - Number of Pallets & Load Meters
                value: !include examples/cargoWithPallets.xml

      290:
        displayName: Customs declaration - with recipient as the importing party
        description: The `ediCustomsDeclarations` element needs one `ediCustomsDeclaration` line per declared item. No importer party in the request.
        body:
          application/json:
            examples:
              customsDeclaration:
                displayName: Customs declaration - with recipient as the importing party
                value: !include examples/customsDeclaration.json
          application/xml:
            examples:
              customsDeclaration:
                displayName: Customs declaration - with recipient as the importing party
                value: !include examples/customsDeclaration.xml

      292:
        displayName: Customs declaration - with importer
        description: The `ediCustomsDeclarations` element needs one `ediCustomsDeclaration` line per declared item. An importer party is also in the request.
        body:
          application/json:
            examples:
              customsDeclarationWithImporter:
                displayName: Customs declaration - with importer
                value: !include examples/customsDeclarationWithImporter.json
          application/xml:
            examples:
              customsDeclarationWithImporter:
                displayName: Customs declaration - with importer
                value: !include examples/customsDeclarationWithImporter.xml

      293:
        displayName: VOEC - Customs Import declaration
        description: The `ediCustomsDeclarations` element needs one `ediCustomsDeclaration` line per declared item, along with vatOnEcommerce field.
        body:
          application/json:
            examples:
              customsImportDeclaration:
                displayName: VOEC - Customs Import declaration
                value: !include examples/customsImportDeclaration.json
          application/xml:
            examples:
              customsImportDeclaration:
                displayName: VOEC - Customs Import declaration
                value: !include examples/customsImportDeclaration.xml

      294:
        displayName: Mailbox parcel
        description: Recipient `phoneNumber` and/or recipient `email` is required
        body:
          application/json:
            examples:
              mailboxParcel:
                displayName: Mailbox parcel
                value: !include examples/mailboxParcel.json
          application/xml:
            examples:
              mailboxParcel:
                displayName: Mailbox parcel
                value: !include examples/mailboxParcel.xml

      295:
        displayName: LQ - Limited Quantities (0003) with gross weight
        description: The LQ VAS gross weight is specified in grams
        body:
          application/json:
            examples:
              businessParcel_with_lq_gross_weight:
                displayName: Business Parcel with 0003 VAS and LQ gross weight
                value: !include examples/businessParcel_with_lq_gross_weight.json
          application/xml:
            examples:
              businessParcel_with_lq_gross_weight:
                displayName: Business Parcel with 0003 VAS and LQ gross weight
                value: !include examples/businessParcel_with_lq_gross_weight.xml

      296:
        displayName: Mailbox parcel with Return Parcel and 1073 VAS
        description: Return Parcel  `Id` is required and Additional VAS is optional
        body:
          application/json:
            examples:
              mailboxParcel_return_vas:
                displayName: Mailbox parcel with Return Parcel and 1073 VAS
                value: !include examples/mailboxParcel_with_return_and_additional_vas.json
          application/xml:
            examples:
              mailboxParcel_return_vas:
                displayName: Mailbox parcel with Return Parcel and 1073 VAS
                value: !include examples/mailboxParcel_with_return_and_additional_vas.xml

      297:
        displayName: Non Standard Courier
        description: The `nonStandardCourierProductCode` is required
        body:
          application/json:
            examples:
              nonStandardCourier:
                displayName: Non Standard Courier
                value: !include examples/nonStandardCourier.json
          application/xml:
            examples:
              nonStandardCourier:
                displayName: Non Standard Courier
                value: !include examples/nonStandardCourier.xml

      298:
        displayName: Parcel Services without measurements
        body:
          application/json:
            examples:
              parcelsWithoutmeasurements:
                displayName: Parcel Services without measurements
                value: !include examples/parcelsWithoutmeasurements.json
          application/xml:
            examples:
              parcelsWithoutmeasurements:
                displayName: Parcel Services without measurements
                value: !include examples/parcelsWithoutmeasurements.xml

      299:
        displayName: Urban Home Delivery (3332) with Flex Delivery
        description: Additional VAS is optional
        body:
          application/json:
            examples:
              uhdflex:
                displayName: Urban Home Delivery (3332) with Flex Delivery
                value: !include examples/3332.json
          application/xml:
            examples:
              uhdflex:
                displayName: Urban Home Delivery (3332) with Flex Delivery
                value: !include examples/3332.xml

      300:
        displayName: Home Delivery (DOUBLE_INDOOR) for norway with Weight and Volume
        description: Home Delivery services can be booked with Weight and either Volume / Dimensions
        body:
          application/json:
            examples:
              doubleIndoor_NO:
                displayName: Home Delivery (DOUBLE_INDOOR) for Norway with Weight and Volume
                value: !include examples/doubleIndoor_NO.json
          application/xml:
            examples:
              doubleIndoor_NO:
                displayName: Home Delivery (DOUBLE_INDOOR) for Norway with Weight and Volume
                value: !include examples/doubleIndoor_NO.xml

      301:
        displayName: Home Delivery (CURBSIDE_EVENING) for Sweden with Weight and Dimensions
        description: Home Delivery services can be booked with Weight and either Volume / Dimensions
        body:
          application/json:
            examples:
              curbsideEvening_SE:
                displayName: Home Delivery (CURBSIDE_EVENING) for Sweden with Weight and Dimensions
                value: !include examples/curbsideEvening_SE.json
          application/xml:
            examples:
              curbsideEvening_SE:
                displayName: Home Delivery (CURBSIDE_EVENING) for Sweden with Weight and Dimensions
                value: !include examples/curbsideEvening_SE.xml


/errors:
  displayName: Error codes
  description: |
    The current enumeration of error codes. A value of "true" for the attribute "suffixable" means that the error code is suffixed with "-SENDER" if the error is for the sending party data and "-RECIPIENT" if the error is for the recipient party data.
  get:
    description: Error codes
    headers:
      Accept: application/json or application/xml
    body:
      application/json:
        examples:
          errors:
            displayName: Error codes
            value: !include examples/errors.json
      application/xml:
        examples:
          errors:
            displayName: Error codes
            value: !include examples/errors.xml


/pickupOrder:
  displayName: Order pickups
  description: |
    The Pickup Order API is for ordering a single pickup at a particular address.

    Parcels Norway, Parcels Sweden, Parcels Denmark and Cargo customers with a Mybring user ID can use this service. Customer numbers in this API are the same as to the Booking API, obtained either through your Mybring profile or the customer number API.

    <strong>We have added new tags for new way of requesting pickup. Both ways are still supported, but they can not be combined.</strong>

    * All the new pickup services will be added supporting only the new way.
    * The old way will be decommissioned after some time.

    Where  before you had to send different tags under the `pickupOrderRequest` tag for ordering different types of pickup .
    Now the new way introduced two tags `service` and `pickupDetails` under `pickupOrderRequest` tag , one to capture type of service you wanted to book and one to capture what will be picked up.

    Example: Ordering pickup for parcel shipments in Norway

    The new way of requesting pickup

    ```xml
     <service>PARCEL</service>
     <pickupDetails>
             <numberOfPackages>1</numberOfPackages>
             <numberOfPostContainers>1</numberOfPostContainers>
             <numberOfPallets>1</numberOfPallets>
     </pickupDetails>
    ```
    The old way of requesting pickup:

    ```
     <parcelsInformation>
            <numberOfPackages>1</numberOfPackages>
            <numberOfPostContainers>1</numberOfPostContainers>
            <numberOfPallets>1</numberOfPallets>
     </parcelsInformation>
    ```


    Pickup in the different countries requires different customer numbers:


    | Customer number prefix | Pickup in country | Required information element     |
    |:-----------------------|:------------------|:---------------------------------|
    | PARCELS_NORWAY         | Norway (parcel services)  |  `<service>PARCEL</service>` & `<pickupDetails></pickupDetails>`  <strike>parcelsInformation </strike>|
    | CARGO                  | Norway (cargo services)    | `<service>CARGO</service>` & `<pickupDetails></pickupDetails>` <strike>cargoInformation </strike>|
    | PARCELS_SWEDEN, PARCELS_DENMARK | Sweden, Denmark (parcel services) | `<service>PARCEL</service>` & `<pickupDetails></pickupDetails>` <strike>parcelsInternationalInformation </strike>|

    If your company has been converted to services with new service names (revised services) in Booking and Shipping Guide, pickup of parcels and/or cargo in Norway is done using your company's new API customer number - i.e your company’s main customer number. You company's main customer number equals your PARCELS_NORWAY-*********** customer number, without prefix PARCELS_NORWAY- and any leading zeros.

    ### Pickup is ordered by default with service CARGO_GROUPAGE from Bring Cargo

    A pickup order is necessary to get the goods collected for transportation by Bring Cargo but you don't have to worry about it when ordering with the API .

    A pickup will be automatically ordered together with the shipment when ordering a `CARGO_GROUPAGE` shipment.

    If you order many shipments the pickups will be aggregated by Bring Cargo to one pickup by place and date.
  post:
    description: Order a pickup
    body:
      application/json:
        examples:
          pickuporder_NO:
            displayName: Order a pickup
            value: !include examples/pickuporder_NO_new_way.json
      application/xml:
        examples:
          pickuporder_NO:
            displayName: Order a pickup
            value: !include examples/pickuporder_NO_new_way.xml
    responses:
      200:
        displayName: Successful pickup order
        body:
          application/json:
            examples:
              success:
                displayName: Successful pickup order
                value: !include examples/pickuporder_response.json
              pickuporder_SE:
                displayName: Parcels Sweden request
                value: !include examples/pickuporder_SE_new_way.json
              pickuporder_CARGO:
                displayName: Cargo request
                value: !include examples/pickuporder_CARGO_new_way.json
          application/xml:
            examples:
              success:
                displayName: Successful pickup order
                value: !include examples/pickuporder_response.xml
              pickuporder_SE:
                displayName: Parcels Sweden request
                value: !include examples/pickuporder_SE_new_way.xml
              pickuporder_CARGO:
                displayName: Cargo request
                value: !include examples/pickuporder_CARGO_new_way.xml

/ws:
  displayName: SOAP
  description: |
    The SOAP Body follows the same XML Schema Definition (XSD) as the XML API.

    The SOAP endpoint has the same operations as the endpoints listed above:

    - list customers
    - book shipments
    - order pickups

    ### WSDL

    [https://api.bring.com/booking/api/ws/booking-v1.wsdl](https://api.bring.com/booking/api/ws/booking-v1.wsdl)

    ### XSD

    [https://api.bring.com/booking/api/schema/booking-v1.xsd](https://api.bring.com/booking/api/schema/booking-v1.xsd)
  post:
    description: Get expected delivery, service categories and additional information.
    headers:
      Content-Type:
        description: Specify request format text/xml;charset=UTF-8
      X-MyBring-API-Uid:
        required: true
        description: Your Mybring login ID
      X-MyBring-API-Key:
        required: true
        description: Your user's API key
      X-Bring-Client-URL:
        required: true
        description: Identifying the web-page or application where the Bring API data is used
    body:
        application/xml:
          examples:
            soap_request:
              displayName: SOAP
              value: !include examples/booking_soap_request.xml

